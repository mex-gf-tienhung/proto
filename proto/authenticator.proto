syntax = "proto3";

package mex.authenticator.v1;
option go_package = "./authenticator";

service AuthenticatorService {
  rpc AccountCreate(AccountCreateRequest) returns (AccountCreateResponse);
  rpc AccountDelete(AccountDeleteRequest) returns (AccountDeleteResponse);
  rpc AccountBlock(AccountBlockRequest) returns (AccountBlockResponse);
  rpc AccountUnblock(AccountUnblockRequest) returns (AccountUnblockRespone);
  rpc AccountUpdateUserName(AccountUpdateUserNameRequest) returns (Account);
  rpc TokenVerify(TokenVerifyRequest) returns (TokenVerifyResponse);
}

message AccountCreateRequest {
  repeated AccountAdd list_account = 1;
}

message AccountAdd {
  string phone = 1;
  string password = 2;
  string role = 3;
  string staff_id = 4;
  string workspace_id = 5;
}

message AccountCreateResponse {}

message AccountDeleteRequest {
  string account_id = 1;
}

message AccountDeleteResponse {
  string account_id = 1;
}

message AccountDetailRequest {
  string account_id = 1;
}

message AccountDetailResponse {
  string account_id = 1;
  string phone = 2;
  string password = 3;
  string role = 4;
}

message AccountBlockRequest {
  string staff_id = 1;
}

message AccountBlockResponse {
}

message AccountUnblockRequest {
  string staff_id = 1;
}

message AccountUnblockRespone {
}

message AccountAllRequest {
  string workspace_id = 1;
}

message AccountAllResponse {
  string workspace_id = 1;
  repeated Account account = 2;
}

message TokenVerifyRequest {
  string jwt_token = 1;
}

message TokenVerifyResponse {
  string phone = 1;
  int32 status = 2;
  string role = 3;
  string account_id = 4;
}

message AuthRegenerateTokenRequest {
  string token = 1;
  string sub_workspace_id = 2;
  string position_id = 3;
}

message AuthRegenerateTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message AccountUpdateUserNameRequest {
  string staff_id = 1;
  string new_phone = 2;
}


message Account {
  string id = 1;
  string phone = 2;
}
